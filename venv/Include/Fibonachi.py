#Метод для вычисления и вывода чисел фибоначи через рекурсию
def fibo(n):
    #Создаем условия что бы рекурсия могла начать выходить и завершать работу выавая результат
    if n < 1: return 0;
    if n == 1: return 1;
    #Прободим рекурсивный вызов который вычисляет два предыдущих числа, по средству прохода по дереву
    return fibo(n-1) + fibo(n-2)


#выводим вопрос сколько чисел фибоначи вывести
n = int(input("Enter max Fibonachi numbers: "))
#создаем массив, без чисел
arrayList = []
#Заполняем массив числами фибоначи для того что бы можно было выводить их
for i in range(1, n + 1 ):
    arrayList.append(fibo(i))
#цикл по выводу построеный на условии так сказать строки, если в зависимости от i определяется какой формат строки
#выводится, вывод осуществляется в 10-тичной, в 2-ичной и 16-тиричной системе счисления
for i in range(3):
    if i > 0: print()
    for n in range(len(arrayList)):
        if i == 0: print(arrayList[n], end=" ")
            #использована функция bin() с выводом со 2 позиции([2:]) и указываем zfill() 
            #который дополняет 0 если нужно слева до нужного количества 0 с лева
        if i == 1: print(bin(arrayList[n])[2:].zfill(4), end=" ")
        if i == 2: print(hex(arrayList[n]), end=" ")

#Вопрос про запись в файл
question = str(input("Write in file : "))
# Проверка ответа пользователя, и использованием перевод строки в нижний регист, что дает нам 
#экономию в написании проверок, на одной букве не видно экономию, но если букв больше то и вариантов написать слово 
#в разных регистрах увеличивается, перевод в нижний регист делает так, что не зависимо как пользователь напишет, всегда проверится 
#то что нужно
if  question.lower() == "y":
    #указани пути к файлу
    file_path = str(input("\nFile path :"))
    #открытие файла в конструкторе with, что обеспечивает 100% закрытие потока
    with open(file_path, 'w') as file:
       # такойже вывод как и на консоль, только в файл
        for i in range(3):
            if i > 0: print(file=file)
            for n in range(len(arrayList)):
                if i == 0: print(arrayList[n], end=" ",file=file)
                if i == 1: print(bin(arrayList[n])[2:].zfill(4), end=" ",file=file)
                if i == 2: print(hex(arrayList[n]).zfill(4), end=" ",file=file)
